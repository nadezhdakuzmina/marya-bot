import renderList from '@utils/renderList';

import createCaptureProcedureScript from './captureProcedure';
import createFindUserScript from './findUser';
import createSaleControls from './saleControls';
import createSpammer from './spammer';
import createUserListScript from './usersList';

import type { Keyboard, Script, Scripts } from '@modules/core';
import type { Context } from '../types';
import type { CreateScriptParams } from './types';

enum Commands {
  UsersList = '–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤',
  CaptureProcedure = '–ó–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ—Ü–µ–¥—É—Ä—É',
  FindUser = '–ù–∞–π—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞',
  SaleControls = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∞–º–∏',
  MakeSpamMessage = '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É',
  GoBack = 'üëà –ù–∞–∑–∞–¥',
  Any = '*',
}

function createAdminScript(this: Context, mainMenu: Keyboard): Script {
  const { users } = this;

  const helpMessage =
    '*–ù–∏–∂–µ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:*\n' +
    '\n' +
    renderList([
      Commands.UsersList,
      Commands.FindUser,
      Commands.CaptureProcedure,
      Commands.SaleControls,
    ]) +
    '\n\n' +
    `${Commands.GoBack}`;

  const startMessage = '*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!*\n' + helpMessage;

  const adminMenu: Keyboard = [
    [{ text: Commands.UsersList }],
    [{ text: Commands.FindUser }],
    [{ text: Commands.CaptureProcedure }],
    [{ text: Commands.SaleControls }],
    [{ text: Commands.MakeSpamMessage }],
    [{ text: Commands.GoBack }],
  ];

  const scripts: Scripts = {};

  const context: CreateScriptParams = {
    scripts,
    helpMessage,
    adminMenu,
    users,
  };

  (scripts[Commands.UsersList] = createUserListScript(context)),
    (scripts[Commands.FindUser] = createFindUserScript(context)),
    (scripts[Commands.CaptureProcedure] =
      createCaptureProcedureScript(context)),
    (scripts[Commands.SaleControls] = createSaleControls.call(this, context)),
    (scripts[Commands.MakeSpamMessage] = createSpammer(context));
  scripts[Commands.GoBack] = {
    text: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
    keyboard: mainMenu,
  };
  scripts[Commands.Any] = {
    text: '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞',
    keyboard: mainMenu,
  };

  return {
    text: startMessage,
    keyboard: adminMenu,
    onText: scripts,
  };
}

export default createAdminScript;
