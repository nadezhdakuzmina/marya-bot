import renderList from '@utils/renderList';

import createCaptureProcedureScript from './captureProcedure';
import createFindUserScript from './findUser';
import createUserListScript from './usersList';

import type { Keyboard, Script, Scripts, TelegramCore } from '@modules/core';
import type { Context } from '../types';
import { CreateScriptParams } from './types';

enum Commands {
  UsersList = '–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤',
  CaptureProcedure = '–ó–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ—Ü–µ–¥—É—Ä—É',
  FindUser = '–ù–∞–π—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞',
  GoBack = 'üëà –ù–∞–∑–∞–¥',
  Any = '*',
}

function createAdminScript(this: Context, mainMenu: Keyboard): Script {
  const { users } = this;

  const helpMessage =
    '*–ù–∏–∂–µ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:*\n' +
    '\n' +
    renderList([
      Commands.UsersList,
      Commands.FindUser,
      Commands.CaptureProcedure,
    ]) +
    '\n\n' +
    `${Commands.GoBack}`;

  const startMessage = '*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!*\n' + helpMessage;

  const adminMenu: Keyboard = [
    [{ text: Commands.UsersList }],
    [{ text: Commands.FindUser }],
    [{ text: Commands.CaptureProcedure }],
    [{ text: Commands.GoBack }],
  ];

  const context: CreateScriptParams = {
    scripts: {},
    helpMessage,
    adminMenu,
    users,
  };

  const scripts: Scripts = {
    [Commands.UsersList]: createUserListScript(context),
    [Commands.FindUser]: createFindUserScript(context),
    [Commands.CaptureProcedure]: createCaptureProcedureScript(context),
    [Commands.GoBack]: {
      text: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
      keyboard: mainMenu,
    },
    [Commands.Any]: {
      text: '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞',
      keyboard: mainMenu,
    },
  };

  context.scripts = scripts;

  return {
    text: startMessage,
    keyboard: adminMenu,
    onText: scripts,
  };
}

export default createAdminScript;
